 Lock 기초
 DeadLock
= 게임 서버에서 데드락은 가장 주위 해야 할 문제

= 데드락: 멀티 쓰레드 환경에서 
두개 이상의 쓰레드가 서로 다른 쓰레드는 보유한 
자원의 해제를 무한정 기다리는 상황
데드락 발생 조건:
데드락이 발생하기 위해서 4가지 조건이 모두 충족되어야 한다.
1. 상호 배재 (Mutal Exlusion):
자원은 한번에 하나의 쓰레드만 사용 할 수 있어야 한다.
2. 점유대시 ( Hold and Wait)
적어도 하나의 쓰레드가 자원을 점유 한채 다른 쓰레드가 점유한 자원을 추가로 요구하면 
대기 중인 상태
3. 비선점 (No Preemption)
 자원은 그자원을 보유 하고 있는 쓰레드가 스스로 해제 할 때 까지 
다른 쓰레드에 의해 강제로 빼앗 길 수 없다.
4. 순환대기 ( Circle Wait)
 대기 하는 쓰레드 사이에 순환 형태의 체인이 존재 해야 한다. 이 체인에서 각 쓰레드는 다음 
 쓰레드가 요구하는 자원을보유하고 있다.

데드락은 멀티 쓰레딩 프로그램에서 발생 할 수 있느 복잡한 문제이다.
데드락 조건 잘 이해하고 예방 전략을 적용 시켜야 애플리케이션의 안정성과 신뢰성을 크게 
향상 시킬 수 있다.


데드락 예방 및 해결
1. 상호 배제 제거: 가능한 경우 자원을 공유 할 수 있도록 하여 상호배제 조건을 제거 그러나  
이 방법은 모든 상황에 적용 할 수 없다.

2. 점유대기 조건 제거
: 한번에 모든 필요한 자원을 요청 하도록 알고리즘을 설계하여  이미 점유한 자원을 보유한
상태에서 추가 자원을 대기 하지 않도록 한다.

 SprintLock
 ContextSwitching
내일 배울 것
 AutoResetEvent